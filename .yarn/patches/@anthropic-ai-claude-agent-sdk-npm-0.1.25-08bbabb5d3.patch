diff --git a/sdk.mjs b/sdk.mjs
index 10162e5b1624f8ce667768943347a6e41089ad2f..32568ae08946590e382270c88d85fba81187568e 100755
--- a/sdk.mjs
+++ b/sdk.mjs
@@ -6213,7 +6213,7 @@ function createAbortController(maxListeners = DEFAULT_MAX_LISTENERS) {
 }
 
 // ../src/transport/ProcessTransport.ts
-import { spawn } from "child_process";
+import { fork } from "child_process";
 import { createInterface } from "readline";
 
 // ../src/utils/fsOperations.ts
@@ -6487,14 +6487,11 @@ class ProcessTransport {
         const errorMessage = isNativeBinary(pathToClaudeCodeExecutable) ? `Claude Code native binary not found at ${pathToClaudeCodeExecutable}. Please ensure Claude Code is installed via native installer or specify a valid path with options.pathToClaudeCodeExecutable.` : `Claude Code executable not found at ${pathToClaudeCodeExecutable}. Is options.pathToClaudeCodeExecutable set?`;
         throw new ReferenceError(errorMessage);
       }
-      const isNative = isNativeBinary(pathToClaudeCodeExecutable);
-      const spawnCommand = isNative ? pathToClaudeCodeExecutable : executable;
-      const spawnArgs = isNative ? [...executableArgs, ...args] : [...executableArgs, pathToClaudeCodeExecutable, ...args];
-      this.logForDebugging(isNative ? `Spawning Claude Code native binary: ${spawnCommand} ${spawnArgs.join(" ")}` : `Spawning Claude Code process: ${spawnCommand} ${spawnArgs.join(" ")}`);
+      this.logForDebugging(`Forking Claude Code Node.js process: ${pathToClaudeCodeExecutable} ${args.join(" ")}`);
       const stderrMode = env.DEBUG || stderr ? "pipe" : "ignore";
-      this.child = spawn(spawnCommand, spawnArgs, {
+      this.child = fork(pathToClaudeCodeExecutable, args, {
         cwd,
-        stdio: ["pipe", "pipe", stderrMode],
+        stdio: stderrMode === "pipe" ? ["pipe", "pipe", "pipe", "ipc"] : ["pipe", "pipe", "ignore", "ipc"],
         signal: this.abortController.signal,
         env
       });
